"""fix doctor and specialty relationship

Revision ID: 478c60b5a3e2
Revises: ce41c9321a86
Create Date: 2025-06-12 11:35:05.989666

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '478c60b5a3e2'
down_revision: Union[str, None] = 'ce41c9321a86'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('appointment', sa.Column('time', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('appointment', sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column('appointment', 'date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.drop_column('appointment', 'reason')
    op.alter_column('doctor', 'specialty_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('doctor', 'specialty_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('appointment', sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('appointment', 'date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('appointment', 'status')
    op.drop_column('appointment', 'time')
    # ### end Alembic commands ###
